{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/edit.js","webpack:///./src/editor.scss","webpack:///./src/index.js","webpack:///./src/save.js","webpack:///external {\"this\":[\"wp\",\"blockEditor\"]}","webpack:///external {\"this\":[\"wp\",\"blocks\"]}","webpack:///external {\"this\":[\"wp\",\"components\"]}","webpack:///external {\"this\":[\"wp\",\"compose\"]}","webpack:///external {\"this\":[\"wp\",\"element\"]}","webpack:///external {\"this\":[\"wp\",\"i18n\"]}"],"names":["Edit","attributes","setAttributes","title","titleColor","body","colors","name","color","marginBottom","registerBlockType","__","description","category","icon","supports","html","source","selector","default","edit","save"],"mappings":";;;;;;;;;;;;;;;;QAAA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA,QAAQ,oBAAoB;QAC5B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA,iBAAiB,4BAA4B;QAC7C;QACA;QACA,kBAAkB,2BAA2B;QAC7C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA;QACA;QACA;QACA,gBAAgB,uBAAuB;QACvC;;;QAGA;QACA;QACA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;;;AAGA;AACA;CAYA;;AAEA;;;;;;AAKA;AAEA;;;;;;;AAMA;AAEA;;;;;;;;;;;;AAWe,SAASA,IAAT,OAA6C;AAAA,MAA7BC,UAA6B,QAA7BA,UAA6B;AAAA,MAAjBC,aAAiB,QAAjBA,aAAiB;AAAA,MACnDC,KADmD,GACvBF,UADuB,CACnDE,KADmD;AAAA,MAC5CC,UAD4C,GACvBH,UADuB,CAC5CG,UAD4C;AAAA,MAChCC,IADgC,GACvBJ,UADuB,CAChCI,IADgC;AAG3D,MAAMC,MAAM,GAAG,CACd;AAAEC,QAAI,EAAE,KAAR;AAAeC,SAAK,EAAE;AAAtB,GADc,EAEd;AAAED,QAAI,EAAE,OAAR;AAAiBC,SAAK,EAAE;AAAxB,GAFc,EAGd;AAAED,QAAI,EAAE,MAAR;AAAgBC,SAAK,EAAE;AAAvB,GAHc,CAAf;AAMA,SAAO,CACN,yEAAC,yEAAD;AAAmB,SAAK,EAAE;AAAEC,kBAAY,EAAE;AAAhB;AAA1B,KACC,yEAAC,+DAAD;AAAW,SAAK,EAAE;AAAlB,KACC,oFACC,iHADD,CADD,EAIC,yEAAC,kEAAD;AACC,UAAM,EAAEH,MADT;AAEC,SAAK,EAAEF,UAFR;AAGC,YAAQ,EAAE,kBAACA,UAAD;AAAA,aAAgBF,aAAa,CAAC;AAAEE,kBAAU,EAAVA;AAAF,OAAD,CAA7B;AAAA;AAHX,IAJD,CADD,CADM,EAaN;AAAK,aAAS,EAAC;AAAf,KACC,yEAAC,gEAAD;AACC,OAAG,EAAC,UADL;AAEC,WAAO,EAAC,IAFT;AAGC,eAAW,EAAC,gBAHb;AAIC,SAAK,EAAED,KAJR;AAKC,YAAQ,EAAE,kBAACA,KAAD;AAAA,aAAWD,aAAa,CAAC;AAAEC,aAAK,EAALA;AAAF,OAAD,CAAxB;AAAA,KALX;AAMC,SAAK,EAAE;AAAEK,WAAK,EAAEJ;AAAT;AANR,IADD,EASC,yEAAC,gEAAD;AACC,OAAG,EAAC,UADL;AAEC,WAAO,EAAC,GAFT;AAGC,eAAW,EAAC,sBAHb;AAIC,SAAK,EAAEC,IAJR;AAKC,YAAQ,EAAE,kBAACA,IAAD;AAAA,aAAUH,aAAa,CAAC;AAAEG,YAAI,EAAJA;AAAF,OAAD,CAAvB;AAAA;AALX,IATD,CAbM,CAAP;AA+BA,C;;;;;;;;;;;ACpFD,uC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAKA;AAEA;;;;;;AAKA;AAEA;;;;;;;;AAOA;AAEA;;;;AAGA;AACA;AAEA;;;;;;AAKAK,2EAAiB,CAAC,kBAAD,EAAqB;AACrC;;;;AAIAP,OAAK,EAAEQ,0DAAE,CAAC,KAAD,EAAQ,cAAR,CAL4B;;AAOrC;;;;AAIAC,aAAW,EAAED,0DAAE,CACd,mFADc,EAEd,cAFc,CAXsB;;AAgBrC;;;;AAIAE,UAAQ,EAAE,SApB2B;;AAsBrC;;;;AAIAC,MAAI,EAAE,QA1B+B;;AA4BrC;;;AAGAC,UAAQ,EAAE;AACT;AACAC,QAAI,EAAE;AAFG,GA/B2B;AAoCrC;AACAf,YAAU,EAAE;AACXE,SAAK,EAAE;AACNc,YAAM,EAAE,MADF;AAENC,cAAQ,EAAE;AAFJ,KADI;AAKXd,cAAU,EAAE;AACXe,aAAO,EAAE;AADE,KALD;AAQXd,QAAI,EAAE;AACLY,YAAM,EAAE,MADH;AAELC,cAAQ,EAAE;AAFL;AARK,GArCyB;;AAmDrC;;;AAGAE,MAAI,EAAEpB,6CAtD+B;;AAwDrC;;;AAGAqB,MAAI,EAAJA,6CAAIA;AA3DiC,CAArB,CAAjB,C;;;;;;;;;;;;;;;;;;;;;;AClCA;;;AAGA;AAEA;;;;;;AAKA;AAEA;;;;;;;;;;AASe,SAASA,IAAT,OAA8B;AAAA,MAAdpB,UAAc,QAAdA,UAAc;AAAA,MACpCE,KADoC,GACpBF,UADoB,CACpCE,KADoC;AAAA,MAC7BE,IAD6B,GACpBJ,UADoB,CAC7BI,IAD6B;AAG5C,SACC;AAAK,aAAS,EAAC;AAAf,KACC,qFAAKF,KAAL,CADD,EAEC,yEAAC,gEAAD,CAAU,OAAV;AAAkB,WAAO,EAAC,GAA1B;AAA8B,SAAK,EAAEE;AAArC,IAFD,CADD;AAMA,C;;;;;;;;;;;AC9BD,aAAa,4CAA4C,EAAE,I;;;;;;;;;;;ACA3D,aAAa,uCAAuC,EAAE,I;;;;;;;;;;;ACAtD,aAAa,2CAA2C,EAAE,I;;;;;;;;;;;ACA1D,aAAa,wCAAwC,EAAE,I;;;;;;;;;;;ACAvD,aAAa,wCAAwC,EAAE,I;;;;;;;;;;;ACAvD,aAAa,qCAAqC,EAAE,I","file":"index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/index.js\",\"style-index\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * WordPress dependencies\n */\nimport { RichText, InspectorControls } from \"@wordpress/block-editor\";\nimport {\n\tColorPalette,\n\tPanel,\n\tPanelBody,\n\tPanelRow,\n\t// CheckboxControl,\n\t// RadioControl,\n\t// TextControl,\n\t// ToggleControl,\n\t// SelectControl,\n} from \"@wordpress/components\";\nimport { withState } from \"@wordpress/compose\";\n// import { more } from \"@wordpress/icons\";\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport \"./editor.scss\";\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @param {Object} [props]           Properties passed from the editor.\n * @param {string} [props.className] Class name generated for the block.\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit({ attributes, setAttributes }) {\n\tconst { title, titleColor, body } = attributes;\n\n\tconst colors = [\n\t\t{ name: \"red\", color: \"#f00\" },\n\t\t{ name: \"white\", color: \"#fff\" },\n\t\t{ name: \"blue\", color: \"#00f\" },\n\t];\n\n\treturn [\n\t\t<InspectorControls style={{ marginBottom: \"40px\" }}>\n\t\t\t<PanelBody title={\"Font Color Settings\"}>\n\t\t\t\t<p>\n\t\t\t\t\t<strong>Select a Title color:</strong>\n\t\t\t\t</p>\n\t\t\t\t<ColorPalette\n\t\t\t\t\tcolors={colors}\n\t\t\t\t\tvalue={titleColor}\n\t\t\t\t\tonChange={(titleColor) => setAttributes({ titleColor })}\n\t\t\t\t/>\n\t\t\t</PanelBody>\n\t\t</InspectorControls>,\n\t\t<div className=\"cta-container\">\n\t\t\t<RichText\n\t\t\t\tkey=\"editable\"\n\t\t\t\ttagName=\"h2\"\n\t\t\t\tplaceholder=\"Your CTA Title\"\n\t\t\t\tvalue={title}\n\t\t\t\tonChange={(title) => setAttributes({ title })}\n\t\t\t\tstyle={{ color: titleColor }}\n\t\t\t/>\n\t\t\t<RichText\n\t\t\t\tkey=\"editable\"\n\t\t\t\ttagName=\"p\"\n\t\t\t\tplaceholder=\"Your CTA Description\"\n\t\t\t\tvalue={body}\n\t\t\t\tonChange={(body) => setAttributes({ body })}\n\t\t\t/>\n\t\t</div>,\n\t];\n}\n","// extracted by mini-css-extract-plugin","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nimport { registerBlockType } from \"@wordpress/blocks\";\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport \"./style.scss\";\n\n/**\n * Internal dependencies\n */\nimport Edit from \"./edit\";\nimport save from \"./save\";\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType(\"create-block/cta\", {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __(\"Cta\", \"create-block\"),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t\"Example block written with ESNext standard and JSX support – build step required.\",\n\t\t\"create-block\"\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: \"widgets\",\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: \"smiley\",\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false,\n\t},\n\n\t// Specifying my block attributes\n\tattributes: {\n\t\ttitle: {\n\t\t\tsource: \"html\",\n\t\t\tselector: \"h2\",\n\t\t},\n\t\ttitleColor: {\n\t\t\tdefault: \"black\",\n\t\t},\n\t\tbody: {\n\t\t\tsource: \"html\",\n\t\t\tselector: \"p\",\n\t\t},\n\t},\n\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n});\n","/**\n * WordPress dependencies\n */\nimport { RichText } from \"@wordpress/block-editor\";\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nexport default function save({ attributes }) {\n\tconst { title, body } = attributes;\n\n\treturn (\n\t\t<div className=\"cta-container\">\n\t\t\t<h2>{title}</h2>\n\t\t\t<RichText.Content tagName=\"p\" value={body} />\n\t\t</div>\n\t);\n}\n","(function() { module.exports = this[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = this[\"wp\"][\"blocks\"]; }());","(function() { module.exports = this[\"wp\"][\"components\"]; }());","(function() { module.exports = this[\"wp\"][\"compose\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());","(function() { module.exports = this[\"wp\"][\"i18n\"]; }());"],"sourceRoot":""}